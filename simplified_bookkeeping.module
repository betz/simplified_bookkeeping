<?php

use \Drupal\simplified_bookkeeping\entity\BookingEntity;

/**
 * Implements hook_entity_insert().
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function simplified_bookkeeping_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {

  // If the bundle is a bankstatement,
  // we differentiate between purchase and sale,
  // so we can create a purchase or sale booking.
  if($entity->bundle() == 'bankstatement') {

    // If the bankstatement is negative, create a purchase booking
    if($entity->get('field_bankstatement_amount')->getValue()[0]['value'] < 0) {
      $purchase = BookingEntity::create([
        'type' => 'purchase',
        'name' => $entity->get('field_bankstatement_memo')->getValue()[0]['value'],
        'field_purchase_date' => $entity->get('field_bankstatement_date')->getValue()[0]['value'],
        'field_purchase_total_amount' => $entity->get('field_bankstatement_amount')->getValue()[0]['value'],
        'field_purchase_payment_date' => $entity->get('field_bankstatement_date')->getValue()[0]['value'],
        'field_bankstatement' => $entity->id(),
        'field_purchase_payment_method' => 'banktransfer',
        'uid' => 1
      ]);
      $purchase->save();
    }

    // If the bankstatement is positive, create a sale booking
    if($entity->get('field_bankstatement_amount')->getValue()[0]['value'] > 0) {
      $sale = BookingEntity::create([
        'type' => 'sale',
        'name' => $entity->get('field_bankstatement_memo')->getValue()[0]['value'],
        'field_sale_total_amount' => $entity->get('field_bankstatement_amount')->getValue()[0]['value'],
        'field_sale_date' => $entity->get('field_bankstatement_date')->getValue()[0]['value'],
        'field_sale_payment_date' => $entity->get('field_bankstatement_date')->getValue()[0]['value'],
        'field_bankstatement' => $entity->id(),
        'field_sale_payment_method' => 'banktransfer',
        'uid' => 1
      ]);
      $sale->save();
    }
  }
}

/**
 * Implements hook_theme().
 */
function simplified_bookkeeping_theme() {
  $theme = [];
  $theme['booking'] = [
    'render element' => 'elements',
    'file' => 'booking.page.inc',
    'template' => 'booking',
  ];
  $theme['booking_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'booking.page.inc',
  ];
  return $theme;
}

/**
* Implements hook_theme_suggestions_HOOK().
*/
function simplified_bookkeeping_theme_suggestions_booking(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#booking'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'booking__' . $sanitized_view_mode;
  $suggestions[] = 'booking__' . $entity->bundle();
  $suggestions[] = 'booking__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'booking__' . $entity->id();
  $suggestions[] = 'booking__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}
